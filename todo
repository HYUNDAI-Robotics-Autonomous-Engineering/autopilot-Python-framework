- rename/restructure templates as tasks, protocols. make protocol a base class of tasks
- Make inits and the RPilot object more generic - init hardware rather than pins, etc.
    - Make all the hardware logic as separate objects, and have the mouse & protocol determine which hardware is present
    - Same with load_sounds, the speakers/sound driver should be a hardware object.


------------------
- drag and drop mice order
- send sound files
- Make verbose/nonverbose mode - either report whole trials or events
- Backfill logging into terminal & etc.

TO SET THE NOSEPOKE WAIT TIME, USE TABLE TRIGGERS:
>>> tabr = TableRead(SNDS_PATH + "/transparent.aif").out()
>>> trig = TrigRand(tabr['trig'])

- classic mode, button that switches the UI to flickering grey screen
- sound calibration routine
- move all class references to __init__
- Make meta 'subscriber' class instead of describing each subscriber separately
- Standardize messages into class
- simplify networking objects with metaclass
- change GUI so params not always shown on click, and start/stop button isn't hidden in it.
    - Instead, just scroll box with mice, start/stop button
    - auto-open textbox to input weight then auto-advance to next mouse in list.
    - make 'add mice' dropdown to each pilot
    - make mice reorderable
- make batch mouse creation window
- add mouse infobox to left of plot
- fix 'new mouse' button to specify pilot
- make superclass of all "parameters-like" windows (windows that are a list of something.)

order of code review:
!- terminal
!- gui
- pilot
- networking
- plots
-
